 private void setTableCursos() {
        DefaultTableModel dtmCursos = new DefaultTableModel(carreras, 0);
        dtmCursos.setRowCount(0);
        ArrayList<String> softwareCourses = new ArrayList<>();
        ArrayList<String> tiCourses = new ArrayList<>();
        for (Cursos cur : curso) {
            if ("Software".equals(cur.getNombreCar())) {
                softwareCourses.add(cur.getNombreCur());
            } else if ("TI".equals(cur.getNombreCar())) {
                tiCourses.add(cur.getNombreCur());
            }
        }
        int maxRows = Math.max(softwareCourses.size(), tiCourses.size());
        for (int i = 0; i < maxRows; i++) {
            String softwareCourse = i < softwareCourses.size() ? softwareCourses.get(i) : "";
            String tiCourse = i < tiCourses.size() ? tiCourses.get(i) : "";
            dtmCursos.addRow(new Object[]{softwareCourse, tiCourse});
        }
        jtblCursos.setModel(dtmCursos);
        jtblCursos.setCellSelectionEnabled(true);
    }
    
    private void setListEstudiantes(String nombreCurso) {
        DefaultListModel dlmEstudiantes = new DefaultListModel();
        for (Estudiantes est : estudiante) {
            if (est.getNombreCur().equals(nombreCurso)) {
                dlmEstudiantes.addElement(est.getNombreEst()); // Add students of the selected course
            }
        }
        if (dlmEstudiantes.getSize() == 0) {
            JOptionPane.showMessageDialog(null, "No hay estudiantes inscritos en este curso.");
        } else {
            jlstEstudiantes.setModel(dlmEstudiantes);
            jlblCurso.setText("Curso: " + nombreCurso);
        }
    }

    private void setComboboxCursos() {
        DefaultComboBoxModel<String> dcmCursos = (DefaultComboBoxModel<String>) jcmbCursos.getModel();
        dcmCursos.removeAllElements();
        for (Cursos cur : curso) {
            dcmCursos.addElement(cur.getNombreCur());
        }
    }